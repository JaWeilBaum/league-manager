version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2

jobs:
  python:
    docker:
      - image: circleci/python:3.8.2

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m pip install --user virtualenv
            python3 -m virtualenv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r test_requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest --junitxml=test-reports/test-results.xml --cov=. --cov-report=xml --cov-report=html
      - store_test_results:
          path: test-reports
      - codecov/upload:
          file: coverage.xml

  scorecard_js:
    docker:
      - image: cicleci/node:15.1
    working_directory: ~/repo/scorecard

    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            - v2-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
      - run:
          name: "JavaScript Linter"
          command: npm lint -- --format junit -o test-reports/js-lint-results.xml
      - run:
          name: "JavaScript Test Suite"
          environment:
            JEST_JUNIT_OUTPUT: test-reports/js-test-results.xml
          command: npm run circleci -- --ci --testResultsProcessor="jest-junit"
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: reports
      - codecov/upload:
          file: js-lint-results.xml
      - codecov/upload:
          file: js-test-results.xml

workflows:
  version: 2
  build_and_test:
    jobs:
      - python
      - scorecard_js
