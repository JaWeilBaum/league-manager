version: 2.1
orbs:
  codecov: codecov/codecov@1.1.3
  node: circleci/node@4.1.0

jobs:
  python:
    docker:
      - image: circleci/python:3.8.2

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m pip install --user virtualenv
            python3 -m virtualenv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r test_requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest --junitxml=test-reports/test-results.xml --cov=. --cov-report=xml --cov-report=html
      - store_test_results:
          path: test-reports
      - codecov/upload:
          file: coverage.xml

  scorecard_js:
    executor:
      name: node/default
      tag: "15.8"
    working_directory: ~/repo
    steps:
      - checkout
      - node/install-packages:
          app-dir: scorecard/
      - run:
          name: "JavaScript Test Suite"
          command: npm --prefix scorecard/ run jest
      - run:
          name: "JavaScript Linter"
          command: npm --prefix scorecard/ run eslint

  liveticker_js:
    executor:
      name: node/default
      tag: "15.8"
    working_directory: ~/repo
    steps:
      - checkout
      - node/install-packages:
          app-dir: liveticker/
      - run:
          name: "JavaScript Test Suite"
          command: npm --prefix liveticker/ run jest
      - run:
          name: "JavaScript Linter"
          command: npm --prefix liveticker/ run eslint

workflows:
  version: 2
  build_and_test:
    jobs:
      - python
      - scorecard_js
      - liveticker_js
