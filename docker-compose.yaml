services:
  www:
    build:
      context: .
      dockerfile: container/nginx.Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}.www
    labels:
      - traefik.http.routers.frontend_${SERVICE_NAME}.tls=true
      - traefik.http.routers.frontend_${SERVICE_NAME}.rule=Host(`${SERVICE_HOST}`)
      - traefik.http.routers.frontend_${SERVICE_NAME}.tls.certresolver=letsencryptdnsresolver
      - traefik.http.routers.frontend_${SERVICE_NAME}_local_qualified.rule=Host(`${SERVICE_NAME}.${LOCAL_HOSTNAME}`)
      - traefik.http.routers.frontend_${SERVICE_NAME}_local_qualified.entrypoints=web
    networks:
      - backend
      - proxy
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: curl -A healthcheck -I --fail http://localhost || exit 1
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: container/app.Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}.app
    command: gunicorn -b 0.0.0.0:8000 league_manager.wsgi
    environment:
      MYSQL_HOST: db
      MYSQL_DB_NAME: test_test_db
      MYSQL_USER: user
      MYSQL_PASSWORD: user
      DJANGO_SETTINGS_MODULE: league_manager.settings.dev
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl -A healthcheck -I --fail http://localhost:8000 || exit 1

  db:
    restart: unless-stopped
    image: mariadb:lts
    container_name: ${COMPOSE_PROJECT_NAME}.db
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-storage-engine=InnoDB
    volumes:
      - "./database:/var/lib/mysql"
    networks:
      - backend
    environment:
      MYSQL_DATABASE: test_test_db
      MYSQL_USER: user
      MYSQL_PASSWORD: user
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    healthcheck:
      test: healthcheck.sh --connect --innodb_initialized
      start_period: 5s

volumes:
  static:

networks:
  backend:
  proxy:
    external: true
